C51 COMPILER V9.56.0.0   MAIN                                                              05/05/2018 00:16:53 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: e:\Keil_v5-C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC12.H>
   2          #include<intrins.h>
   3          
   4          
   5          
   6          #define uchar unsigned char;
   7          #define uint unsigned int;
   8          
   9          #define RS_CLR RS=0 
  10          #define RS_SET RS=1
  11          
  12          #define RW_CLR RW=0 
  13          #define RW_SET RW=1 
  14          
  15          #define EN_CLR EN=0
  16          #define EN_SET EN=1
  17          
  18          #define DataPort P0 //1602数据口              
  19          sbit RS = P3^5;   
  20          sbit RW = P3^6;
  21          sbit EN = P3^7;
  22          
  23          sbit beep= P2^6;//蜂鸣器
  24          sbit key1= P2^0;
  25          sbit key2= P2^2;
  26          sbit led= P2^5;
  27          uchar da1=0,da2=0,da3=0;
  28          
  29          double Data,c;
  30          uint warnnum=2;
  31          char a[5]="";   
  32          char temp;  
  33          uint key_num;
  34          uchar ADC_Chanul_Turn=0;
  35          char code str[] = "ATD18895702575;\n";
  36          
  37          void DelayUs2x(unsigned char t)
  38          {   
  39   1        while(--t);
  40   1      }
  41          
  42          void DelayMs(unsigned char t)
  43          {     
  44   1        while(t--)
  45   1        {
  46   2           
  47   2          DelayUs2x(245);
  48   2          DelayUs2x(245);
  49   2        }
  50   1      }
  51          
  52          bit LCD_Check_Busy(void) 
  53          { 
  54   1        DataPort= 0xFF; 
C51 COMPILER V9.56.0.0   MAIN                                                              05/05/2018 00:16:53 PAGE 2   

  55   1        RS_CLR; 
  56   1        RW_SET; 
  57   1        EN_CLR; 
  58   1        _nop_(); 
  59   1        EN_SET;
  60   1        return (bit)(DataPort & 0x80);    
  61   1      }
  62          
  63          void LCD_Write_Com(unsigned char com) 
  64          {  
  65   1        while(LCD_Check_Busy());
  66   1        RS_CLR; 
  67   1        RW_CLR; 
  68   1        EN_SET; 
  69   1        DataPort= com;         
  70   1        _nop_(); 
  71   1        EN_CLR;
  72   1      }
  73          
  74          void LCD_Write_Data(unsigned char Data) 
  75          { 
  76   1        while(LCD_Check_Busy()); 
  77   1        RS_SET; 
  78   1        RW_CLR; 
  79   1        EN_SET; 
  80   1        DataPort= Data; 
  81   1        _nop_();
  82   1        EN_CLR;
  83   1      }
  84          
  85          
  86          void LCD_Clear(void) 
  87          { 
  88   1        LCD_Write_Com(0x01); 
  89   1        DelayMs(5);
  90   1      }
  91          
  92          void LCD_Write_String(unsigned char x,unsigned char y,unsigned char*s)
  93          {     
  94   1        if (y == 0) 
  95   1        {     
  96   2          LCD_Write_Com(0x80 + x);    
  97   2        }
  98   1        else 
  99   1        {      
 100   2          LCD_Write_Com(0xC0 + x);     
 101   2        }        
 102   1        while (*s) 
 103   1        {     
 104   2          LCD_Write_Data( *s);     
 105   2          s ++;     
 106   2        }
 107   1      }
 108          
 109          void LCD_Write_Char(unsigned char x,unsigned char y,unsigned char Data) 
 110          {     
 111   1        if (y == 0) 
 112   1        {     
 113   2          LCD_Write_Com(0x80 + x);     
 114   2        }    
 115   1        else 
 116   1        {     
C51 COMPILER V9.56.0.0   MAIN                                                              05/05/2018 00:16:53 PAGE 3   

 117   2          LCD_Write_Com(0xC0 + x);     
 118   2        }        
 119   1        LCD_Write_Data( Data);  
 120   1      }
 121          
 122          void LCD_Init(void) 
 123          {
 124   1        LCD_Write_Com(0x38);    
 125   1        DelayMs(100);
 126   1        LCD_Write_Com(0x0C);
 127   1        DelayMs(200);
 128   1        LCD_Write_Com(0x06);    
 129   1          DelayMs(200);
 130   1        LCD_Write_Com(0x01); 
 131   1        DelayMs(150);    
 132   1      //   LCD_Write_Com(0x38); 
 133   1      //   DelayMs(5); 
 134   1      //   LCD_Write_Com(0x38); 
 135   1      //   DelayMs(5); 
 136   1      //   LCD_Write_Com(0x38);  
 137   1      //  LCD_Write_Com(0x08);            
 138   1      }
 139             
 140           
 141          
 142          void InitADC()
 143          {
 144   1        P1ASF=0X07;     
 145   1        ADC_RES=0X00;    
 146   1        ADC_CONTR=0xF0; 
 147   1        _nop_();
 148   1        _nop_();
 149   1        _nop_();
 150   1        _nop_();
 151   1        ADC_CONTR=0xE8;                                
 152   1      } 
 153              
 154          void timer0() interrupt 1      
 155          {
 156   1          TH0=(65536-20000)/256;       
 157   1          TL0=(65536-20000)%256;     
 158   1          InitADC();
 159   1      }
 160          void adc_isr() interrupt 5     
 161          {  
 162   1        da1=ADC_RES;                                
 163   1        Data=((double)da1/256)*5;     
 164   1        c =Data;
 165   1            
 166   1        a[0]=((int)c%10+0x30);
 167   1        a[1]=0x2e;                    
 168   1        a[2]=((int)(c*10)%10+0x30); 
 169   1        a[3]=((int)(c*100)%10+0x30);
 170   1        a[4]='\0';                  
 171   1      
 172   1        LCD_Write_String(8,0,a);
 173   1        temp=((int)warnnum%10+0x30);
 174   1        LCD_Write_Char(12,1,temp);      //显示警报设定电压值
 175   1          
 176   1        ADC_CONTR&=0xEF;               
 177   1        ADC_Chanul_Turn++;
 178   1        if(ADC_Chanul_Turn==252) 
C51 COMPILER V9.56.0.0   MAIN                                                              05/05/2018 00:16:53 PAGE 4   

 179   1          ADC_Chanul_Turn=0;    
 180   1      }
 181          
 182          void key_scan()
 183          {
 184   1        if(key1==0)
 185   1        {
 186   2          DelayMs(10);
 187   2          if(key1==0)
 188   2          {
 189   3            key_num++;
 190   3            if(key_num==1)
 191   3            {   
 192   4              LCD_Write_Com(0x0f);  
 193   4              LCD_Write_Com(0x80+0x40+12);
 194   4            }
 195   3            if(key_num==2)
 196   3            {
 197   4              key_num=0;
 198   4              LCD_Write_Char(12,1,warnnum);
 199   4              LCD_Write_Com(0x0c);
 200   4            }
 201   3            while(!key1);   
 202   3          } 
 203   2        }
 204   1      
 205   1        if(key2==0&&key_num!=0)
 206   1        {
 207   2          DelayMs(10);
 208   2          if(key2==0)
 209   2          {
 210   3            warnnum++;
 211   3            if(warnnum==9)
 212   3              warnnum=0;
 213   3            LCD_Write_Com(0x80+0x40+12);
 214   3            LCD_Write_Data(0x30+warnnum);
 215   3            while(!key2);               
 216   3          }
 217   2        }
 218   1      }
 219          void time_init()
 220          {
 221   1          TMOD = 0x20;      // 定时器1工作于8位自动重载模式, 用于产生波特率
 222   1          TH1 = 0xFD;       // 波特率9600
 223   1          TL1 = 0xFD;
 224   1        
 225   1          SCON = 0x50;      // 设定串行口工作方式
 226   1          PCON &= 0xef;     // 波特率不倍增
 227   1        
 228   1          TH0=(65536-20000)/256;           //????0
 229   1          TL0=(65536-20000)%256;
 230   1          EA=1;                             //?????
 231   1          ET0=1;                             //????????
 232   1          EADC=1;                          //??ADC?? 
 233   1          TR1 = 1;        
 234   1          TR0=1;
 235   1      }
 236          void send_str()
 237          // 传送字串
 238          {
 239   1        unsigned char i = 0;
 240   1        beep=0;          //蜂鸣器报警
C51 COMPILER V9.56.0.0   MAIN                                                              05/05/2018 00:16:53 PAGE 5   

 241   1        IE=0x00;
 242   1        while(str[i] != '\0')
 243   1        {
 244   2          SBUF = str[i];
 245   2          while(!TI);       // 等特数据传送
 246   2          TI = 0;         // 清除数据传送标志
 247   2          i++;          // 下一个字符
 248   2        } 
 249   1        time_init();
 250   1      
 251   1      }
 252          void main()
 253          {
 254   1          LCD_Init(); 
 255   1          LCD_Clear();                     
 256   1        LCD_Write_String(0,2,"Warning num:");
 257   1        LCD_Write_String(0,0,"Ammonia:");//氨气浓度
 258   1        LCD_Write_String(12,0,"%");
 259   1          DelayMs(255);
 260   1          
 261   1          TMOD = 0x20;      // 定时器1工作于8位自动重载模式, 用于产生波特率
 262   1          TH1 = 0xFD;       // 波特率9600
 263   1          TL1 = 0xFD;
 264   1        
 265   1          SCON = 0x50;      // 设定串行口工作方式
 266   1          PCON &= 0xef;     // 波特率不倍增
 267   1          TH0=(65536-20000)/256;           
 268   1          TL0=(65536-20000)%256;
 269   1          EA=1;                            
 270   1          ET0=1;                             
 271   1          EADC=1;                          
 272   1          TR0=1; 
 273   1          TR1 = 1;  
 274   1          while(1)
 275   1        {
 276   2          key_scan();
 277   2          if(Data>=warnnum&&key_num==0)
 278   2          {
 279   3      //      beep=0;
 280   3            send_str();
 281   3            led=0;
 282   3            DelayMs(200);           //超过警戒值报警  
 283   3          }
 284   2          else {beep=1;led=1;}
 285   2        }
 286   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    772    ----
   CONSTANT SIZE    =     41    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
